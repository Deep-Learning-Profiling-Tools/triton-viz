# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main", "tejas3070-patch-1" ]
  #pull_request:
    #branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: 'tejas3070-patch-1'
        path: 'triton_viz'

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Cache virtual environment
      id: cache-triton_env
      uses: actions/cache@v2
      with:
        path: |
          triton_env
          ~/.cache/pip
        key: ${{ runner.os }}-triton_env-${{ hashFiles('triton_viz/requirements.txt') }}-v1
        restore-keys: |
          ${{ runner.os }}-triton_env-${{ hashFiles('triton_viz/requirements.txt') }}-

    - name: Create virtual environment
      run: |
        python -m venv triton_env
        echo "ENV_NAME=triton_env" >> $GITHUB_ENV
        echo "TRITON_DIR=triton-$ENV_NAME" >> $GITHUB_ENV

    - name: Upgrade pip
      run: |
        source triton_env/bin/activate
        pip install --upgrade pip

    - name: Clone and install Triton from source
      if: steps.cache-triton_env.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/openai/triton.git ${{ env.TRITON_DIR }}
        cd ${{ env.TRITON_DIR }}/python
        source ../../triton_env/bin/activate
        pip install .

    - name: Install additional dependencies
      if: steps.cache-triton_env.outputs.cache-hit != 'true'
      run: |
        source triton_env/bin/activate
        pip install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cu121
        pip uninstall pytorch-triton -y
        cd triton_viz
        pip install .
        pip install -r requirements.txt

    - name: Lint with pre-commit
      run: |
        source triton_env/bin/activate
        cd triton_viz
        pre-commit run --all-files

    - name: Test with pytest
      run: |
        source triton_env/bin/activate
        cd triton_viz
        pytest Examples
